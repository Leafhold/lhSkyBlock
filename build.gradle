plugins {
    id 'java'
    id("com.gradleup.shadow") version "8.3.7"
}

group = 'org.leafhold'
version = '0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven { name = "papermc-repo"; url = "https://repo.papermc.io/repository/maven-public/" }
    maven { name = "sonatype"; url = "https://oss.sonatype.org/content/groups/public/" }
    maven { name = "citizens-repo"; url = "https://maven.citizensnpcs.co/repo" }
    maven { name = "jitpack"; url = "https://jitpack.io" }
    maven { name = "FancyInnovations"; url = "https://repo.fancyinnovations.com/releases" }
    maven { name = "enginehub"; url = "https://repo.enginehub.org/repo/" }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.21.5-R0.1-SNAPSHOT'
    compileOnly('net.citizensnpcs:citizens-main:2.0.39-SNAPSHOT') {
        exclude group: '*', module: '*'
    }
    compileOnly("com.github.MilkBowl:VaultAPI:1.7") {
        exclude group: "org.bukkit", module: "bukkit"
    }
    compileOnly("de.oliver:FancyHolograms:2.5.0")
    compileOnly("com.fastasyncworldedit:FastAsyncWorldEdit-Bukkit:2.13.0")
    compileOnly("com.sk89q.worldguard:worldguard-bukkit:7.0.13")
    implementation("com.zaxxer:HikariCP:6.3.0")
}

tasks {
    shadowJar {
        archiveClassifier.set('');
    }
    build {
        dependsOn shadowJar
    }
}

def targetJavaVersion = 21

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset = 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
